package net.povstalec.sgjourney.common.misc;

import net.minecraft.world.level.block.Block;
import net.minecraft.world.phys.shapes.Shapes;
import net.minecraft.world.phys.shapes.VoxelShape;

public class VoxelDimensionProvider {

    public static final double MIN = 0.0D;
    public static final double MAX = 16.0D;
    public static final double MID = MAX / 2;
    public static final double HORIZONTAL_OFFSET = 1.0D;
    public final double HORIZONTAL_TOP;
    public final double VERTICAL_START;
    public final double VERTICAL_END;



    public final VoxelShape FULL_BLOCK;
    public final VoxelShape HORIZONTAL;
    public final VoxelShape HORIZONTAL_BOTTOM_LEFT;
    public final VoxelShape HORIZONTAL_BOTTOM_RIGHT;
    public final VoxelShape HORIZONTAL_TOP_LEFT;
    public final VoxelShape HORIZONTAL_TOP_RIGHT;

    public final VoxelShape HORIZONTAL_STAIR_BOTTOM_LEFT;
    public final VoxelShape HORIZONTAL_STAIR_BOTTOM_RIGHT;
    public final VoxelShape HORIZONTAL_STAIR_TOP_LEFT;
    public final VoxelShape HORIZONTAL_STAIR_TOP_RIGHT;

    public final VoxelShape[] HORIZONTAL_SHAPES;
    public final VoxelShape[] HORIZONTAL_STAIR_SHAPES;

    public final VoxelShape X;
    public final VoxelShape X_TOP_LEFT;
    public final VoxelShape X_TOP_RIGHT;
    public final VoxelShape X_BOTTOM_LEFT;
    public final VoxelShape X_BOTTOM_RIGHT;

    public final VoxelShape X_STAIR_TOP_LEFT;
    public final VoxelShape X_STAIR_TOP_RIGHT;
    public final VoxelShape X_STAIR_BOTTOM_LEFT;
    public final VoxelShape X_STAIR_BOTTOM_RIGHT;

    public final VoxelShape Z;
    public final VoxelShape Z_TOP_LEFT;
    public final VoxelShape Z_TOP_RIGHT;
    public final VoxelShape Z_BOTTOM_LEFT;
    public final VoxelShape Z_BOTTOM_RIGHT;

    public final VoxelShape Z_STAIR_TOP_LEFT;
    public final VoxelShape Z_STAIR_TOP_RIGHT;
    public final VoxelShape Z_STAIR_BOTTOM_LEFT;
    public final VoxelShape Z_STAIR_BOTTOM_RIGHT;

    public final VoxelShape[][] DEFAULT;

    public final VoxelShape[][] TOP_LEFT;
    public final VoxelShape[][] BOTTOM_LEFT;
    public final VoxelShape[][] BOTTOM_RIGHT;
    public final VoxelShape[][] TOP_RIGHT;

    public final VoxelShape[][] STAIR_TOP_LEFT;
    public final VoxelShape[][] STAIR_BOTTOM_LEFT;
    public final VoxelShape[][] STAIR_BOTTOM_RIGHT;
    public final VoxelShape[][] STAIR_TOP_RIGHT;

    public VoxelDimensionProvider() {
        double width = 7.0D;

        HORIZONTAL_TOP = HORIZONTAL_OFFSET + width;
        VERTICAL_START = MID - (width / 2);
        VERTICAL_END = MID + (width / 2);

        FULL_BLOCK = Block.box(MIN, MIN, MIN, MAX, MAX, MAX);
        HORIZONTAL = Block.box(MIN, HORIZONTAL_OFFSET, MIN, MAX, HORIZONTAL_TOP, MAX);
        HORIZONTAL_BOTTOM_LEFT = Block.box(MIN, HORIZONTAL_OFFSET, MIN, HORIZONTAL_TOP, HORIZONTAL_TOP, HORIZONTAL_TOP);
        HORIZONTAL_BOTTOM_RIGHT = Block.box(HORIZONTAL_TOP, HORIZONTAL_OFFSET, MIN, MAX, HORIZONTAL_TOP, HORIZONTAL_TOP);
        HORIZONTAL_TOP_LEFT = Block.box(MIN, HORIZONTAL_OFFSET, HORIZONTAL_TOP, HORIZONTAL_TOP, HORIZONTAL_TOP, MAX);
        HORIZONTAL_TOP_RIGHT = Block.box(HORIZONTAL_TOP, HORIZONTAL_OFFSET, HORIZONTAL_TOP, MAX, HORIZONTAL_TOP, MAX);

        HORIZONTAL_STAIR_BOTTOM_LEFT = Shapes.or(HORIZONTAL_BOTTOM_RIGHT, HORIZONTAL_TOP_LEFT, HORIZONTAL_TOP_RIGHT);
        HORIZONTAL_STAIR_BOTTOM_RIGHT = Shapes.or(HORIZONTAL_BOTTOM_LEFT, HORIZONTAL_TOP_LEFT, HORIZONTAL_TOP_RIGHT);
        HORIZONTAL_STAIR_TOP_LEFT = Shapes.or(HORIZONTAL_BOTTOM_LEFT, HORIZONTAL_BOTTOM_RIGHT, HORIZONTAL_TOP_RIGHT);
        HORIZONTAL_STAIR_TOP_RIGHT = Shapes.or(HORIZONTAL_BOTTOM_LEFT, HORIZONTAL_BOTTOM_RIGHT, HORIZONTAL_TOP_LEFT);

        HORIZONTAL_SHAPES = new VoxelShape[] {HORIZONTAL_BOTTOM_RIGHT, HORIZONTAL_BOTTOM_LEFT, HORIZONTAL_TOP_RIGHT, HORIZONTAL_TOP_LEFT};
        HORIZONTAL_STAIR_SHAPES = new VoxelShape[] {HORIZONTAL_STAIR_TOP_LEFT, HORIZONTAL_STAIR_TOP_RIGHT, HORIZONTAL_STAIR_BOTTOM_LEFT, HORIZONTAL_STAIR_BOTTOM_RIGHT};

        X = Block.box(MIN, MIN, VERTICAL_START, MAX, MAX, VERTICAL_END);
        X_TOP_LEFT = Block.box(MIN, MID, VERTICAL_START, MID, MAX, VERTICAL_END);
        X_TOP_RIGHT = Block.box(MID, MID, VERTICAL_START, MAX, MAX, VERTICAL_END);
        X_BOTTOM_LEFT = Block.box(MIN, MIN, VERTICAL_START, MID, MID, VERTICAL_END);
        X_BOTTOM_RIGHT = Block.box(MID, MIN, VERTICAL_START, MAX, MID, VERTICAL_END);

        X_STAIR_TOP_LEFT =  Shapes.or(X_BOTTOM_LEFT, X_BOTTOM_RIGHT, X_TOP_RIGHT);
        X_STAIR_TOP_RIGHT =  Shapes.or(X_BOTTOM_LEFT, X_BOTTOM_RIGHT, X_TOP_LEFT);
        X_STAIR_BOTTOM_LEFT =  Shapes.or(X_TOP_LEFT, X_TOP_RIGHT, X_BOTTOM_RIGHT);
        X_STAIR_BOTTOM_RIGHT =  Shapes.or(X_TOP_LEFT, X_TOP_RIGHT, X_BOTTOM_LEFT);

        Z = Block.box(VERTICAL_START, MIN, MIN, VERTICAL_END, MAX, MAX);
        Z_TOP_LEFT = Block.box(VERTICAL_START, MID, MIN, VERTICAL_END, MAX, MID);
        Z_TOP_RIGHT = Block.box(VERTICAL_START, MID, MID, VERTICAL_END, MAX, MAX);
        Z_BOTTOM_LEFT = Block.box(VERTICAL_START, MIN, MIN, VERTICAL_END, MID, MID);
        Z_BOTTOM_RIGHT = Block.box(VERTICAL_START, MIN, MID, VERTICAL_END, MID, MAX);

        Z_STAIR_TOP_LEFT =  Shapes.or(Z_BOTTOM_LEFT, Z_BOTTOM_RIGHT, Z_TOP_RIGHT);
        Z_STAIR_TOP_RIGHT =  Shapes.or(Z_BOTTOM_LEFT, Z_BOTTOM_RIGHT, Z_TOP_LEFT);
        Z_STAIR_BOTTOM_LEFT =  Shapes.or(Z_TOP_LEFT, Z_TOP_RIGHT, Z_BOTTOM_RIGHT);
        Z_STAIR_BOTTOM_RIGHT =  Shapes.or(Z_TOP_LEFT, Z_TOP_RIGHT, Z_BOTTOM_LEFT);

        DEFAULT = new VoxelShape[][] {{HORIZONTAL}, {X, Z}, {HORIZONTAL}};

        TOP_LEFT = new VoxelShape[][] {{HORIZONTAL_BOTTOM_LEFT, HORIZONTAL_BOTTOM_RIGHT, HORIZONTAL_TOP_RIGHT, HORIZONTAL_TOP_LEFT}, {X_TOP_LEFT, Z_TOP_LEFT, X_TOP_RIGHT, Z_TOP_RIGHT}, {HORIZONTAL_TOP_LEFT, HORIZONTAL_BOTTOM_LEFT, HORIZONTAL_BOTTOM_RIGHT, HORIZONTAL_TOP_RIGHT}};
        BOTTOM_LEFT = new VoxelShape[][] {{HORIZONTAL_TOP_LEFT, HORIZONTAL_BOTTOM_LEFT, HORIZONTAL_BOTTOM_RIGHT, HORIZONTAL_TOP_RIGHT}, {X_BOTTOM_LEFT, Z_BOTTOM_LEFT, X_BOTTOM_RIGHT, Z_BOTTOM_RIGHT}, {HORIZONTAL_BOTTOM_LEFT, HORIZONTAL_BOTTOM_RIGHT, HORIZONTAL_TOP_RIGHT, HORIZONTAL_TOP_LEFT}};
        BOTTOM_RIGHT = new VoxelShape[][] {{HORIZONTAL_TOP_RIGHT, HORIZONTAL_TOP_LEFT, HORIZONTAL_BOTTOM_LEFT, HORIZONTAL_BOTTOM_RIGHT}, {X_BOTTOM_RIGHT, Z_BOTTOM_RIGHT, X_BOTTOM_LEFT, Z_BOTTOM_LEFT}, {HORIZONTAL_BOTTOM_RIGHT, HORIZONTAL_TOP_RIGHT, HORIZONTAL_TOP_LEFT, HORIZONTAL_BOTTOM_LEFT}};
        TOP_RIGHT = new VoxelShape[][] {{HORIZONTAL_BOTTOM_RIGHT, HORIZONTAL_TOP_RIGHT, HORIZONTAL_TOP_LEFT, HORIZONTAL_BOTTOM_LEFT}, {X_TOP_RIGHT, Z_TOP_RIGHT, X_TOP_LEFT, Z_TOP_LEFT}, {HORIZONTAL_TOP_RIGHT, HORIZONTAL_TOP_LEFT, HORIZONTAL_BOTTOM_LEFT, HORIZONTAL_BOTTOM_RIGHT}};

        STAIR_TOP_LEFT = new VoxelShape[][] {{HORIZONTAL_STAIR_BOTTOM_LEFT, HORIZONTAL_STAIR_BOTTOM_RIGHT, HORIZONTAL_STAIR_TOP_RIGHT, HORIZONTAL_STAIR_TOP_LEFT}, {X_STAIR_TOP_LEFT, Z_STAIR_TOP_LEFT, X_STAIR_TOP_RIGHT, Z_STAIR_TOP_RIGHT}, {HORIZONTAL_STAIR_TOP_LEFT, HORIZONTAL_STAIR_BOTTOM_LEFT, HORIZONTAL_STAIR_BOTTOM_RIGHT, HORIZONTAL_STAIR_TOP_RIGHT}};
        STAIR_BOTTOM_LEFT = new VoxelShape[][] {{HORIZONTAL_STAIR_TOP_LEFT, HORIZONTAL_STAIR_BOTTOM_LEFT, HORIZONTAL_STAIR_BOTTOM_RIGHT, HORIZONTAL_STAIR_TOP_RIGHT}, {X_STAIR_BOTTOM_LEFT, Z_STAIR_BOTTOM_LEFT, X_STAIR_BOTTOM_RIGHT, Z_STAIR_BOTTOM_RIGHT}, {HORIZONTAL_STAIR_BOTTOM_LEFT, HORIZONTAL_STAIR_BOTTOM_RIGHT, HORIZONTAL_STAIR_TOP_RIGHT, HORIZONTAL_STAIR_TOP_LEFT}};
        STAIR_BOTTOM_RIGHT = new VoxelShape[][] {{HORIZONTAL_STAIR_TOP_RIGHT, HORIZONTAL_STAIR_TOP_LEFT, HORIZONTAL_STAIR_BOTTOM_LEFT, HORIZONTAL_STAIR_BOTTOM_RIGHT}, {X_STAIR_BOTTOM_RIGHT, Z_STAIR_BOTTOM_RIGHT, X_STAIR_BOTTOM_LEFT, Z_STAIR_BOTTOM_LEFT}, {HORIZONTAL_STAIR_BOTTOM_RIGHT, HORIZONTAL_STAIR_TOP_RIGHT, HORIZONTAL_STAIR_TOP_LEFT, HORIZONTAL_STAIR_BOTTOM_LEFT}};
        STAIR_TOP_RIGHT = new VoxelShape[][] {{HORIZONTAL_STAIR_BOTTOM_RIGHT, HORIZONTAL_STAIR_TOP_RIGHT, HORIZONTAL_STAIR_TOP_LEFT, HORIZONTAL_STAIR_BOTTOM_LEFT}, {X_STAIR_TOP_RIGHT, Z_STAIR_TOP_RIGHT, X_STAIR_TOP_LEFT, Z_STAIR_TOP_LEFT}, {HORIZONTAL_STAIR_TOP_RIGHT, HORIZONTAL_STAIR_TOP_LEFT, HORIZONTAL_STAIR_BOTTOM_LEFT, HORIZONTAL_STAIR_BOTTOM_RIGHT}};
    }

}
